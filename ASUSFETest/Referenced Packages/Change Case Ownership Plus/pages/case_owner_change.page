<apex:page id="pg" title="Change Case Owner" standardController="Case" extensions="ChangeCaseOwner.Case_Owner_Change_Cntr" action="{!checkAutosave}">

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css" id="theme"/>
    <apex:includeScript value="/support/api/28.0/interaction.js"/ >
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <script type="text/javascript">
        ccop_$ = $.noConflict();
    
        var __sfdcSessionId = '{!GETSESSIONID()}';
    </script>
    <script src="/soap/ajax/27.0/connection.js"></script>
    
    <script type="text/javascript">
        ccop_$(document).ready(function(){
            ccop_$('.memberCkbx').click(function(){
                if (ccop_$(this).attr('checked'))
                    ccop_$('.theOptions').find('input').attr('disabled', false);
                else
                    ccop_$('.theOptions').find('input').attr('disabled', true);
            });
        
        });
    </script>
    <script src="/support/console/28.0/integration.js"></script>
    <script type="text/javascript">

    if(sforce.console.isInConsole()) {
        sforce.console.setTabTitle('Change Case Owner');
        
        if({!consoleCloseTab}) {
            sforce.console.getEnclosingPrimaryTabId(function(result) {
                sforce.console.refreshPrimaryTabById(result.id, false, function(result) {
                    sforce.console.getEnclosingTabId(function(result) {
                        sforce.console.closeTab(result.id);
                    });
                });
            });
        }
    }

    </script>
   
    <script type="text/javascript">

    function setupAutocomplete(txtInputName, txtOutputId, funcGetQuery) {
        txtInputName.autocomplete({
            minLength: 1,
            delay: 250,
            dataType: 'json',
            source: function(request, response) {
                        var term = request.term.trim();
                        
                        sforce.connection.query(funcGetQuery(term), function(result, source) {
                            var items = [];
                            var rows = result.getArray('records');

                            if(rows.length == 1) 
                                txtOutputId.val(rows[0].Id);

                            for(var row in rows)
                                items.push( {label : rows[row].Name, value : rows[row].Id} );
                            
                            response(items);
                        });
                    },
            select: function(event, ui) {
                txtInputName.val(ui.item.label);
                txtOutputId.val(ui.item.value);
                return false;
            },
            focus: function(event, ui) {
                return false;
            }
        });
    }
    
    function initTypeAhead() {
        //Autocomplete for user field
        var txtUserName = ccop_$('.user-name');
        if(txtUserName.length > 0) {
            setupAutocomplete(ccop_$('.user-name'), ccop_$('.user-id'), function(term) {
                return "SELECT Id, Name " +
                       "FROM User " +
                       "WHERE UserType = 'Standard' AND IsActive = true AND Name LIKE '%" + term + "%' " +
                       "ORDER BY Name " +
                       "LIMIT 20"
            });
        }

        //Autocomplete for queue field
        var txtQueueName = ccop_$('.queue-name');
        if(txtQueueName.length > 0) {
            setupAutocomplete(txtQueueName, ccop_$('.queue-id'), function(term) {
                return "SELECT Id, Name "+
                       "FROM Group " +
                       "WHERE Type = 'Queue' AND Id IN (SELECT QueueId FROM QueueSobject WHERE SobjectType = 'Case') AND Name LIKE '%" + term + "%' " +
                       "ORDER BY Name " +
                       "LIMIT 20"
            });
        }
    }
    
    ccop_$(document).ready(function() {
        initTypeAhead();
        
        //Bring user name input field into focus if it is not already
        setTimeout(function(){ccop_$('.user-name').focus();}, 1);
    });
    
    function refreshFeed() {
        sforce.interaction.entityFeed.refreshObject('{!case.id}', true, true, true);
        initTypeAhead();
    }
    
    function clearFields() {
        document.getElementById('pg:frm:pb:user-name').value = '';
        document.getElementById('pg:frm:pb:queue-name').value = '';
        initTypeAhead();
    }
    
    </script>
    
    <style type="text/css">
    .inline-block {
        display: inline-block;
    }
    </style>
    <!--[if lte IE 7]> 
    <style type="text/css">
    .inline-block {
        display: inline;
        zoom: 1; /* trigger hasLayout */
    }
    </style>
    <![endif]-->

    <apex:form id="frm"> <!-- onsubmit="setTabPrevious();" -->

        <apex:pagemessages id="messages" />

        <apex:outputPanel rendered="{!inCaseFeeds}">
            <div style="padding:10px; background-color: #f5f5f6; border: 1px solid #d4dadc;"><strong>Change Case Owner</strong></div>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!NOT(inCaseFeeds)}">
            <h2 style="font-size: 2em;">Change Case Owner (<apex:outputText value="{!myCase.CaseNumber}"></apex:outputText>)</h2>
            <p>This screen allows you to transfer cases from one user or queue to another. When you transfer ownership, the new owner will own:</p>
            <ul><li>all open activities (tasks and events) for this case that are assigned to the current owner</li></ul>
            <p>Note that completed activities will not be transferred. Open activities will not be transferred when assigning this case to a queue.</p>
        </apex:outputPanel>
        
        
        <!-- //No longer necessary as of Summer 2013 release
        <apex:pageBlock rendered="{!needsSetup}">
            <apex:pageBlockButtons location="bottom">
                <apex:commandButton value="Setup" action="{!setup}" immediate="true" reRender="frm"/>
            </apex:pageBlockButtons>
            <h2>Custom Change Owner Needs Setup</h2>
            <apex:pageBlockSection collapsible="false" columns="1">
                <apex:pageBlockSectionItem >
                    This case was created prior to installing Change Case Ownership Plus. Please click &quot;Setup&quot; to run a quick install script.
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
        -->

        <div style="{!IF(inCaseFeeds, 'padding: 10px; border: 1px solid #d4dadc; border-top: 0px;', '')}">
        <apex:pageBlock id="pb"> <!-- rendered="{!NOT(needsSetup)}"> -->

            <apex:outputPanel rendered="{!AND(caseTeamSupport,NOT(disableTeams))}">
                <apex:inputCheckbox id="addAsMember" styleClass="memberCkbx" value="{!addAsMember}"  /> Add {!myUser.FirstName} {!myUser.LastName} as a Case Team Member:<br/>
                <apex:selectRadio layout="pageDirection" value="{!selectedRole}" style="margin-left:50px;" styleClass="theOptions" onclick="refresh();" >
                    <apex:selectOptions value="{!roleOptions}" id="myOptions"></apex:selectOptions>
                </apex:selectRadio>
                
                <div class="inline-block" style="margin-left:45px; margin-top:8px; padding: 8px; border-top: 1px solid #ccc; ">
                <apex:inputCheckbox value="{!setDefaultTeamRole}"/>
                Make this role your default
                </div>
                
                <hr style="border:0px; height:1px; color:#999; background-color:#999;"/>
            </apex:outputPanel>

            <div class="inline-block" style="width:{!if(inCaseFeeds,50,55)}%; vertical-align:top;">
                <span style="padding-top:4px; font-weight:bold;">User:</span>
                <div class="inline-block" style="padding:0px 0px 0px 8px; vertical-align:top; width: 75%;">
                    <div style="margin-bottom:8px;">
                        <apex:inputCheckbox id="emailNoteUser" value="{!emailNoteUser}" selected="{!emailNoteUser}"/>
                        Send Notification Email
                    </div>

                    <apex:outputPanel rendered="{!displayButtonUsers}">
                        <apex:outputPanel rendered="{!AND(filterFieldName != null, filterFieldName != '')}">
                            <apex:actionFunction name="updateFilter" action="{!updateUserFilter}" reRender="btn-user-table-container,messages">
                                <apex:param name="filter" value="" assignTo="{!filter}"/>
                            </apex:actionFunction>
                            <apex:inputText id="fltr" style="margin-top: -26px; float: right; color: #999;" value="{!filter}" onkeydown="this.style.color='#000';" onkeyup="updateFilter(this.value);"/>
                            <script>
                                var fltr = document.getElementById('pg:frm:pb:fltr');
                                fltr.value = '{!filterFieldLabel}';
                                fltr.onmousedown = function() {
                                    this.onmousedown = null;
                                    this.value = '';
                                    this.style.color = '#000';
                                }
                            </script>
                        </apex:outputPanel>
                    
                        <apex:outputPanel id="btn-user-table-container">
                            <table id="btn-user-table" style="margin:4px 8px 8px 0px; width: 100%;">
                                <apex:repeat id="users" value="{!userRows}" var="row">
                                    <tr>
                                        <td style="padding-top: 5px;">
                                            <apex:outputPanel >
                                                <apex:commandLink styleClass="btn" style="height:16px; text-decoration:none; margin-right:8px;" value="Change" action="{!save}">
                                                    <apex:param name="user-id" value="{!row.u1.Id}" assignTo="{!dummyCase.OwnerId}"/>
                                                    <apex:param name="owner-is-user" value="true" assignTo="{!caseOwnerIsUser}"/>
                                                    <apex:param name="saved-from-ui" value="true" assignTo="{!savedFromUI}"/>
                                                </apex:commandLink> 
                                            </apex:outputPanel>
                                        </td>
                                        <td style="width: 50%; padding-top: 5px; white-space:nowrap;">
                                            <apex:outputText value="{!row.u1.Name}"></apex:outputText>
                                        </td>

                                        <td style="padding-top: 5px;">
                                            <apex:commandLink styleClass="btn" style="{!IF(row.u2 = '', 'display: none !important; ', '')}height:16px; text-decoration:none; margin-right:8px;" value="Change" action="{!save}">
                                                <apex:param name="user-id" value="{!row.u2.Id}" assignTo="{!dummyCase.OwnerId}"/>
                                                <apex:param name="owner-is-user" value="true" assignTo="{!caseOwnerIsUser}"/>
                                                <apex:param name="saved-from-ui" value="true" assignTo="{!savedFromUI}"/>
                                            </apex:commandLink>
                                        </td>
                                        <td style="width: 50%; padding-top: 5px; white-space:nowrap;">
                                            <apex:outputText value="{!row.u2.Name}"></apex:outputText>
                                        </td>
                                    </tr>
                                </apex:repeat>
                            </table>
                        </apex:outputPanel>
                    </apex:outputPanel>

                    <apex:outputPanel style="margin-left: 3px;" rendered="{!NOT(displayButtonUsers)}" layout="block">
                        <apex:inputText id="user-name" styleClass="user-name" value="{!userName}"/>
                        <apex:inputText style="display:none;" styleClass="user-id inline-block" value="{!dummyCase.OwnerId}"/>
                        <apex:commandLink styleClass="btn inline-block" style="{!if(inCaseFeeds,'margin-top: 8px;','')} height:15px; text-decoration:none; position:relative; top:-1px;" value="Change" action="{!save}" rerender="{!IF(inCaseFeeds,'user-name','')}" oncomplete="{!IF(inCaseFeeds,'refreshFeed();','')}">
                            <apex:param value="true" assignTo="{!caseOwnerIsUser}"/>
                            <apex:param value="true" assignTo="{!savedFromUI}"/>
                        </apex:commandLink>
                    </apex:outputPanel>
                </div>
            </div>
            <div class="inline-block" style="width:{!if(inCaseFeeds,45,35)}%; border-left:1px solid #999; padding-left:8px;">
                <span style="padding-top:4px; font-weight:bold;">Queue:</span>
                <div class="inline-block" style="padding:0px 0px 0px 8px; vertical-align:top; width:75%;">
                    <div style="margin-bottom:8px;">
                        <div class="inline-block"><apex:inputCheckbox id="emailNoteGroup" value="{!emailNoteGroup}" selected="{!emailNoteGroup}" /></div>
                        Send Notification Email
                    </div>
                
                    <apex:repeat rendered="{!displayButtonQueues}" id="queues" value="{!queues}" var="queue">
                        <div style="margin:4px 8px 8px 3px;">
                            <apex:commandLink styleClass="btn" style="height:16px; text-decoration:none; margin-right:8px;" value="Change" action="{!save}">
                                <apex:param name="queue-id" value="{!queue.Id}" assignTo="{!queueId}"/>
                                <apex:param name="owner-is-user" value="false" assignTo="{!caseOwnerIsUser}"/>
                                <apex:param name="saved-from-ui" value="true" assignTo="{!savedFromUI}"/>
                            </apex:commandLink> 
                            <apex:outputText styleClass="btn-queue-txt" style="white-space:nowrap;" value="{!queue.Name}"></apex:outputText>
                        </div>
                    </apex:repeat>
                    
                    <apex:outputPanel style="margin-left: 3px;" rendered="{!NOT(displayButtonQueues)}" layout="block">
                        <apex:inputText id="queue-name" styleClass="queue-name" value="{!queueName}"/>
                        <apex:inputText style="display:none;" styleClass="queue-id" value="{!queueId}"/>
                        <apex:commandLink styleClass="btn inline-block" style="{!if(inCaseFeeds,'margin-top: 8px;','')} height:15px; text-decoration:none; position:relative; top:-1px;" value="Change" action="{!save}" rerender="{!IF(inCaseFeeds,'queue-name','')}" oncomplete="{!IF(inCaseFeeds,'refreshFeed();','')}">
                            <apex:param name="owner-is-user" value="false" assignTo="{!caseOwnerIsUser}"/>
                            <apex:param name="saved-from-ui" value="true" assignTo="{!savedFromUI}"/>
                        </apex:commandLink>
                    </apex:outputPanel>
                </div>
            </div>
            
        </apex:pageBlock>

        <apex:outputPanel rendered="{!inCaseFeeds}">
            <script>
                document.getElementById('pg:frm:pb').className = '';
            </script>
            <br />
        </apex:outputPanel>

        <apex:commandButton value="Cancel" action="{!cancel}" immediate="true" rerender="{!IF(inCaseFeeds,'user-name,queue-name','')}" oncomplete="clearFields();" />

        </div>
        
    </apex:form>
</apex:page>